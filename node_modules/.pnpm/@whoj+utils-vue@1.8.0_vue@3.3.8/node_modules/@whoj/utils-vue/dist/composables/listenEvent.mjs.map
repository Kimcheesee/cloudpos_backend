{"version":3,"file":"listenEvent.mjs","sources":["../../src/_configurable.ts","../../src/composables/listenEvent.ts"],"sourcesContent":["import { isClient } from '@whoj/utils-core';\n\nexport interface ConfigurableWindow {\n  /*\n   * Specify a custom `window` instance, e.g. working with iframes or in testing environments.\n   */\n  window?: Window;\n}\n\nexport interface ConfigurableDocument {\n  /*\n   * Specify a custom `document` instance, e.g. working with iframes or in testing environments.\n   */\n  document?: Document;\n}\n\nexport interface ConfigurableNavigator {\n  /*\n   * Specify a custom `navigator` instance, e.g. working with iframes or in testing environments.\n   */\n  navigator?: Navigator;\n}\n\nexport interface ConfigurableLocation {\n  /*\n   * Specify a custom `location` instance, e.g. working with iframes or in testing environments.\n   */\n  location?: Location;\n}\n\nexport const defaultWindow = /* #__PURE__ */ isClient() ? window : undefined;\nexport const defaultDocument = /* #__PURE__ */ isClient() ? window.document : undefined;\nexport const defaultNavigator = /* #__PURE__ */ isClient() ? window.navigator : undefined;\nexport const defaultLocation = /* #__PURE__ */ isClient() ? window.location : undefined;\n","import { watch } from 'vue-demi';\nimport { isString, noop } from '@whoj/utils-core';\nimport type { Arrayable, Func } from '@whoj/utils-types';\nimport type { ComputedRefable } from '../types';\nimport { defaultWindow } from '../_configurable';\nimport type { RefableElement } from './unrefOfEl';\nimport { unrefElement } from './unrefOfEl';\nimport { tryOnScopeDispose } from './tryOnScopeDispose';\n\ninterface InferEventTarget<Events> {\n  addEventListener(event: Events, fn?: any, options?: any): any;\n  removeEventListener(event: Events, fn?: any, options?: any): any;\n}\n\ninterface BasicEventListener<E = Event> {\n  (evt: E): void;\n}\n\n/**\n * Register using addEventListener on mounted, and removeEventListener automatically on unmounted.\n * @param event\n * @param listener\n * @param options\n */\nexport function listenEvent<E extends keyof WindowEventMap>(event: Arrayable<E>, listener: Arrayable<(this: Window, ev: WindowEventMap[E]) => any>, options?: boolean | AddEventListenerOptions): Func;\nexport function listenEvent<E extends keyof WindowEventMap>(target: Window, event: Arrayable<E>, listener: Arrayable<(this: Window, ev: WindowEventMap[E]) => any>, options?: boolean | AddEventListenerOptions): Func;\nexport function listenEvent<E extends keyof DocumentEventMap>(target: Document, event: Arrayable<E>, listener: Arrayable<(this: Document, ev: DocumentEventMap[E]) => any>, options?: boolean | AddEventListenerOptions): Func;\nexport function listenEvent<Names extends string, EventType = Event>(target: InferEventTarget<Names>, event: Arrayable<Names>, listener: Arrayable<BasicEventListener<EventType>>, options?: boolean | AddEventListenerOptions): Func;\nexport function listenEvent<EventType = Event>(target: ComputedRefable<EventTarget | null | undefined>, event: Arrayable<string>, listener: Arrayable<BasicEventListener<EventType>>, options?: boolean | AddEventListenerOptions): Func;\nexport function listenEvent(...args: any[]) {\n  let target: ComputedRefable<EventTarget> | undefined;\n  let events: Arrayable<string>;\n  let listeners: Arrayable<Function>;\n  let options: any;\n\n  if (isString(args[0]) || Array.isArray(args[0])) {\n    [events, listeners, options] = args;\n    target = defaultWindow;\n  } else {\n    [target, events, listeners, options] = args;\n  }\n\n  if (!target) {\n    return noop;\n  }\n\n  if (!Array.isArray(events)) {\n    events = [events];\n  }\n  if (!Array.isArray(listeners)) {\n    listeners = [listeners];\n  }\n\n  const cleanups: Function[] = [];\n  const cleanup = () => {\n    cleanups.forEach(fn => fn());\n    cleanups.length = 0;\n  };\n\n  const register = (el: any, event: string, listener: any) => {\n    el.addEventListener(event, listener, options);\n    return () => el.removeEventListener(event, listener, options);\n  };\n\n  const stopWatch = watch(\n    () => unrefElement(target as unknown as RefableElement),\n    (el) => {\n      cleanup();\n      if (!el) {\n        return;\n      }\n\n      cleanups.push(\n        ...(events as string[]).flatMap((event) => {\n          return (listeners as Function[]).map(listener => register(el, event, listener));\n        })\n      );\n    },\n    { immediate: true, flush: 'post' }\n  );\n\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n\n  tryOnScopeDispose(stop);\n\n  return stop;\n}\n"],"names":[],"mappings":";;;;;;;;;;;AA8Ba,MAAA,aAAA,mBAAyC,QAAA,EAAA,GAAI,MAAS,GAAA,KAAA,CAAA,CAAA;AAC5D,MAAM,eAAkC,mBAAA,QAAA,EAAa,GAAA,MAAA,CAAO,QAAW,GAAA,KAAA;;ACFvE,SAAS,eAAe,IAAa,EAAA;AAC1C,EAAI,IAAA,MAAA,CAAA;AACJ,EAAI,IAAA,MAAA,CAAA;AACJ,EAAI,IAAA,SAAA,CAAA;AACJ,EAAI,IAAA,OAAA,CAAA;AAEJ,EAAI,IAAA,QAAA,CAAS,IAAK,CAAA,CAAC,CAAC,CAAA,IAAK,MAAM,OAAQ,CAAA,IAAA,CAAK,CAAC,CAAC,CAAG,EAAA;AAC/C,IAAC,CAAA,MAAA,EAAQ,SAAW,EAAA,OAAO,CAAI,GAAA,IAAA,CAAA;AAC/B,IAAS,MAAA,GAAA,aAAA,CAAA;AAAA,GACJ,MAAA;AACL,IAAA,CAAC,MAAQ,EAAA,MAAA,EAAQ,SAAW,EAAA,OAAO,CAAI,GAAA,IAAA,CAAA;AAAA,GACzC;AAEA,EAAA,IAAI,CAAC,MAAQ,EAAA;AACX,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,CAAC,KAAA,CAAM,OAAQ,CAAA,MAAM,CAAG,EAAA;AAC1B,IAAA,MAAA,GAAS,CAAC,MAAM,CAAA,CAAA;AAAA,GAClB;AACA,EAAA,IAAI,CAAC,KAAA,CAAM,OAAQ,CAAA,SAAS,CAAG,EAAA;AAC7B,IAAA,SAAA,GAAY,CAAC,SAAS,CAAA,CAAA;AAAA,GACxB;AAEA,EAAA,MAAM,WAAuB,EAAC,CAAA;AAC9B,EAAA,MAAM,UAAU,MAAM;AACpB,IAAS,QAAA,CAAA,OAAA,CAAQ,CAAM,EAAA,KAAA,EAAA,EAAI,CAAA,CAAA;AAC3B,IAAA,QAAA,CAAS,MAAS,GAAA,CAAA,CAAA;AAAA,GACpB,CAAA;AAEA,EAAA,MAAM,QAAW,GAAA,CAAC,EAAS,EAAA,KAAA,EAAe,QAAkB,KAAA;AAC1D,IAAG,EAAA,CAAA,gBAAA,CAAiB,KAAO,EAAA,QAAA,EAAU,OAAO,CAAA,CAAA;AAC5C,IAAA,OAAO,MAAM,EAAA,CAAG,mBAAoB,CAAA,KAAA,EAAO,UAAU,OAAO,CAAA,CAAA;AAAA,GAC9D,CAAA;AAEA,EAAA,MAAM,SAAY,GAAA,KAAA;AAAA,IAChB,MAAM,aAAa,MAAmC,CAAA;AAAA,IACtD,CAAC,EAAO,KAAA;AACN,MAAQ,OAAA,EAAA,CAAA;AACR,MAAA,IAAI,CAAC,EAAI,EAAA;AACP,QAAA,OAAA;AAAA,OACF;AAEA,MAAS,QAAA,CAAA,IAAA;AAAA,QACP,GAAI,MAAA,CAAoB,OAAQ,CAAA,CAAC,KAAU,KAAA;AACzC,UAAA,OAAQ,UAAyB,GAAI,CAAA,CAAA,QAAA,KAAY,SAAS,EAAI,EAAA,KAAA,EAAO,QAAQ,CAAC,CAAA,CAAA;AAAA,SAC/E,CAAA;AAAA,OACH,CAAA;AAAA,KACF;AAAA,IACA,EAAE,SAAA,EAAW,IAAM,EAAA,KAAA,EAAO,MAAO,EAAA;AAAA,GACnC,CAAA;AAEA,EAAA,MAAM,OAAO,MAAM;AACjB,IAAU,SAAA,EAAA,CAAA;AACV,IAAQ,OAAA,EAAA,CAAA;AAAA,GACV,CAAA;AAEA,EAAA,iBAAA,CAAkB,IAAI,CAAA,CAAA;AAEtB,EAAO,OAAA,IAAA,CAAA;AACT;;;;"}