/**
 * @license MIT
 * @module @whoj/utils-vue@1.8.0
 * @copyright (c) 2023 Jonson B.
 */

import * as vue_demi from 'vue-demi';
import { Optional } from '@whoj/utils-types';
import { ComputedRefable } from './listenEvent.js';

type BuiltInLinkElAttrs = Pick<HTMLLinkElement, 'as' | 'rel' | 'type' | 'media'>;
interface ConfigurableDocument {
    document?: Document;
}
interface UseLinkTagOptions extends ConfigurableDocument, Optional<BuiltInLinkElAttrs> {
    id?: string;
    immediate?: boolean;
    manual?: boolean;
    blocking?: 'render';
    crossOrigin?: 'anonymous' | 'use-credentials';
    referrerPolicy?: 'no-referrer' | 'no-referrer-when-downgrade' | 'origin' | 'origin-when-cross-origin' | 'unsafe-url';
    attrs?: Record<string, string>;
}
declare function useLinkTag(href: ComputedRefable<string>, onLoaded?: (el: HTMLLinkElement) => void, options?: UseLinkTagOptions): {
    linkTag: vue_demi.Ref<HTMLLinkElement>;
    loaded: vue_demi.Ref<boolean>;
    load: (waitForLoad?: boolean) => Promise<HTMLLinkElement | boolean>;
    unload: () => void;
};
type UseLinkTagReturn = ReturnType<typeof useLinkTag>;

export { type UseLinkTagOptions, type UseLinkTagReturn, useLinkTag };
//# sourceMappingURL=useLinkTag.d.ts.map
