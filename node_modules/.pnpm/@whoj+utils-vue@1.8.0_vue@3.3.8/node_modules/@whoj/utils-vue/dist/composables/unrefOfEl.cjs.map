{"version":3,"file":"unrefOfEl.cjs","sources":["../../src/composables/unrefOfEl.ts"],"sourcesContent":["import type { ComponentPublicInstance } from 'vue-demi';\nimport type { ComputedRefable, Refable } from '../types';\nimport { unrefOf } from './unrefOf';\n\nexport type VueInstance = ComponentPublicInstance;\nexport type NullableElement = HTMLElement | SVGElement | VueInstance | undefined | null;\nexport type RefableElement<T extends NullableElement = NullableElement> = Refable<T>;\nexport type ComputedRefableElement<T extends NullableElement = NullableElement> = ComputedRefable<T>;\n\nexport type UnRefElementReturn<T extends NullableElement = NullableElement> = T extends VueInstance ? Exclude<NullableElement, VueInstance> : T | undefined;\n\n/**\n * Get the dom element of a ref of element or Vue component instance\n *\n * @param elRef\n */\nexport function unrefElement<T extends NullableElement>(elRef: ComputedRefableElement<T>): UnRefElementReturn<T> {\n  const plain = unrefOf(elRef);\n  return (plain as VueInstance)?.$el ?? plain;\n}\n"],"names":["unrefOf"],"mappings":";;;;;;;;;;AAgBO,SAAS,aAAwC,KAAyD,EAAA;AAC/G,EAAM,MAAA,KAAA,GAAQA,4BAAQ,KAAK,CAAA,CAAA;AAC3B,EAAA,OAAQ,OAAuB,GAAO,IAAA,KAAA,CAAA;AACxC;;;;"}