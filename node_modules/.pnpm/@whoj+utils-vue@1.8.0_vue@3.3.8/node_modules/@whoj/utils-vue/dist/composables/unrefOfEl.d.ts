/**
 * @license MIT
 * @module @whoj/utils-vue@1.8.0
 * @copyright (c) 2023 Jonson B.
 */

import { ComponentPublicInstance } from 'vue-demi';
import { Refable, ComputedRefable } from './listenEvent.js';

type VueInstance = ComponentPublicInstance;
type NullableElement = HTMLElement | SVGElement | VueInstance | undefined | null;
type RefableElement<T extends NullableElement = NullableElement> = Refable<T>;
type ComputedRefableElement<T extends NullableElement = NullableElement> = ComputedRefable<T>;
type UnRefElementReturn<T extends NullableElement = NullableElement> = T extends VueInstance ? Exclude<NullableElement, VueInstance> : T | undefined;
/**
 * Get the dom element of a ref of element or Vue component instance
 *
 * @param elRef
 */
declare function unrefElement<T extends NullableElement>(elRef: ComputedRefableElement<T>): UnRefElementReturn<T>;

export { type ComputedRefableElement, type NullableElement, type RefableElement, type UnRefElementReturn, type VueInstance, unrefElement };
//# sourceMappingURL=unrefOfEl.d.ts.map
