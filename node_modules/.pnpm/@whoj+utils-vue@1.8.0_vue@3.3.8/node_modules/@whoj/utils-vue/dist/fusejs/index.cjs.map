{"version":3,"file":"index.cjs","sources":["../../src/fusejs/index.ts"],"sourcesContent":["import Fuse from 'fuse.js';\nimport { computed, ref, watch } from 'vue-demi';\nimport type { ComputedRef, Ref } from 'vue-demi';\n\nexport type FuseOptions<T> = Fuse.IFuseOptions<T>;\n\nexport type FuseResult<T> = Fuse.FuseResult<T>;\n\nexport type MaybeReactive<DataT> = ComputedRef<Array<DataT>> | Array<DataT> | Ref<Array<DataT>> | Ref<null> | Ref<null | Array<DataT>>;\n\nexport class FuseJS<DataT> {\n  /**\n   * @type Ref\n   */\n  fuse: Ref<Fuse<DataT>>;\n\n  /**\n   * @type Ref\n   */\n  resultsRaw: Ref<FuseResult<DataT>[]>;\n\n  /**\n   * @type ComputedRef\n   */\n  results: ComputedRef<Array<DataT>>;\n\n  /**\n   * @type Ref\n   */\n  search: Ref<string>;\n\n  /**\n   * @type ComputedRef\n   */\n  noResults: ComputedRef<boolean>;\n\n  /**\n   * @param items\n   * @param options\n   */\n  /**\n   * It takes an array of items and an optional FuseOptions object, and then it creates a new Fuse instance with those\n   * items and options, and then it runs the search with the current search value\n   * @param items - DataT[] - The items to search through.\n   * @param options - FuseOptions<DataT>\n   */\n  loadItems(items: DataT[], options?: FuseOptions<DataT>) {\n    this.fuse = ref(new Fuse(items, options));\n    this.runSearch(this.search.value);\n  }\n\n  /**\n   * If there is no search string, clear the results. Otherwise, search the fuse\n   * @param {string} [search] - The search string to use.\n   * @returns The results of the search.\n   */\n  runSearch(search?: string) {\n    if (!this.fuse) {\n      return;\n    }\n\n    if (!search) {\n      this.resultsRaw.value = [];\n      return;\n    }\n    this.resultsRaw.value = this.fuse.value.search(search as string);\n  }\n\n  /**\n   * We create a new Fuse instance with the list of items and options, and then we create a computed property that returns\n   * the results of the search\n   * @param list - This is the list of items that you want to search. It can be an array of items, or a reactive object\n   * that contains an array of items.\n   * @param options - FuseOptions<DataT>\n   */\n  constructor(list: MaybeReactive<DataT>, options?: FuseOptions<DataT>) {\n    this.search = ref('');\n\n    let locArr: Array<DataT> = [];\n    if (Array.isArray(list)) {\n      locArr = list;\n    } else if (list) {\n      locArr = list.value ?? [];\n      watch(list, () => {\n        this.loadItems(list.value ?? []);\n      });\n    }\n    this.fuse = ref(new Fuse(locArr, options));\n\n    this.resultsRaw = ref([]);\n\n    this.noResults = computed(() => {\n      return this.results.value.length === 0 && this.search.value.length > 0;\n    });\n\n    this.results = computed(() => this.resultsRaw.value.map(r => r.item));\n\n    watch(this.search, this.runSearch);\n  }\n}\n\n/**\n * It takes a list of data and an optional options object, and returns a FuseJS object that can be used to search the list\n * @param list - The list of data to search through.\n * @param [options] - FuseOptions<DataT>\n * @returns A new instance of the FuseJS class.\n */\nexport function useFuseJs<DataT>(list: MaybeReactive<DataT>, options?: FuseOptions<DataT>): FuseJS<DataT> {\n  return new FuseJS<DataT>(list, options);\n}\n"],"names":["ref","watch","computed"],"mappings":";;;;;;;;;;;AAUO,MAAM,MAAc,CAAA;AAAA;AAAA;AAAA;AAAA,EAIzB,IAAA,CAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAA,CAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAA,CAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAA,CAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,SAAA,CAAU,OAAgB,OAA8B,EAAA;AACtD,IAAA,IAAA,CAAK,OAAOA,WAAI,CAAA,IAAI,IAAK,CAAA,KAAA,EAAO,OAAO,CAAC,CAAA,CAAA;AACxC,IAAK,IAAA,CAAA,SAAA,CAAU,IAAK,CAAA,MAAA,CAAO,KAAK,CAAA,CAAA;AAAA,GAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU,MAAiB,EAAA;AACzB,IAAI,IAAA,CAAC,KAAK,IAAM,EAAA;AACd,MAAA,OAAA;AAAA,KACF;AAEA,IAAA,IAAI,CAAC,MAAQ,EAAA;AACX,MAAK,IAAA,CAAA,UAAA,CAAW,QAAQ,EAAC,CAAA;AACzB,MAAA,OAAA;AAAA,KACF;AACA,IAAA,IAAA,CAAK,WAAW,KAAQ,GAAA,IAAA,CAAK,IAAK,CAAA,KAAA,CAAM,OAAO,MAAgB,CAAA,CAAA;AAAA,GACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAA,CAAY,MAA4B,OAA8B,EAAA;AACpE,IAAK,IAAA,CAAA,MAAA,GAASA,YAAI,EAAE,CAAA,CAAA;AAEpB,IAAA,IAAI,SAAuB,EAAC,CAAA;AAC5B,IAAI,IAAA,KAAA,CAAM,OAAQ,CAAA,IAAI,CAAG,EAAA;AACvB,MAAS,MAAA,GAAA,IAAA,CAAA;AAAA,eACA,IAAM,EAAA;AACf,MAAS,MAAA,GAAA,IAAA,CAAK,SAAS,EAAC,CAAA;AACxB,MAAAC,aAAA,CAAM,MAAM,MAAM;AAChB,QAAA,IAAA,CAAK,SAAU,CAAA,IAAA,CAAK,KAAS,IAAA,EAAE,CAAA,CAAA;AAAA,OAChC,CAAA,CAAA;AAAA,KACH;AACA,IAAA,IAAA,CAAK,OAAOD,WAAI,CAAA,IAAI,IAAK,CAAA,MAAA,EAAQ,OAAO,CAAC,CAAA,CAAA;AAEzC,IAAK,IAAA,CAAA,UAAA,GAAaA,WAAI,CAAA,EAAE,CAAA,CAAA;AAExB,IAAK,IAAA,CAAA,SAAA,GAAYE,iBAAS,MAAM;AAC9B,MAAO,OAAA,IAAA,CAAK,QAAQ,KAAM,CAAA,MAAA,KAAW,KAAK,IAAK,CAAA,MAAA,CAAO,MAAM,MAAS,GAAA,CAAA,CAAA;AAAA,KACtE,CAAA,CAAA;AAED,IAAK,IAAA,CAAA,OAAA,GAAUA,gBAAS,CAAA,MAAM,IAAK,CAAA,UAAA,CAAW,MAAM,GAAI,CAAA,CAAA,CAAA,KAAK,CAAE,CAAA,IAAI,CAAC,CAAA,CAAA;AAEpE,IAAMD,aAAA,CAAA,IAAA,CAAK,MAAQ,EAAA,IAAA,CAAK,SAAS,CAAA,CAAA;AAAA,GACnC;AACF,CAAA;AAQgB,SAAA,SAAA,CAAiB,MAA4B,OAA6C,EAAA;AACxG,EAAO,OAAA,IAAI,MAAc,CAAA,IAAA,EAAM,OAAO,CAAA,CAAA;AACxC;;;;;"}