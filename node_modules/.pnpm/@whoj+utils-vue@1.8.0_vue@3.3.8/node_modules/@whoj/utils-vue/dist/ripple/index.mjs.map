{"version":3,"file":"index.mjs","sources":["../../src/ripple/index.ts"],"sourcesContent":["import { isVue3 } from 'vue-demi';\nimport type { Directive, DirectiveBinding, ObjectDirective, Plugin, Ref } from 'vue-demi';\nimport { isNumber, objectKeys } from '@whoj/utils-core';\n\nimport './style.css';\n\ntype DirectiveEl = HTMLButtonElement | HTMLAnchorElement | HTMLElement;\n\ntype DirectiveModifiers = Record<string, boolean>;\n\nexport interface RippleOptions {\n  /**\n   *\n   * @default `true`\n   */\n  enable?: boolean;\n\n  /**\n   *\n   * @default `rgba(0, 0, 0, 0.35)`\n   */\n  color?: string;\n\n  /**\n   *\n   * @default `1`\n   */\n  zIndex?: string;\n}\n\nexport interface DirectiveProps {\n  /**\n   *\n   * @default `mousedown`\n   */\n  event: keyof HTMLElementEventMap;\n\n  /**\n   *\n   * @default `450`\n   */\n  transition: number;\n}\n\n/**\n * It takes an array of modifiers and a DirectiveProps object, and sets the event and transition properties of the\n * DirectiveProps object based on the modifiers\n * @param {any} modifiers - The modifiers passed to the directive.\n * @param {DirectiveProps} props - DirectiveProps\n */\nfunction setProps(modifiers: any, props: DirectiveProps) {\n  // @ts-ignore\n  modifiers.forEach((item) => {\n    if (!isNumber(item)) {\n      props.event = item;\n    } else {\n      props.transition = item;\n    }\n  });\n}\n\n/**\n * It adds an event listener to the element, and when the event is triggered, it creates a ripple element and appends it to\n * the element\n * @param {DirectiveEl} el - DirectiveEl - The element that the directive is attached to.\n * @param {DirectiveModifiers} modifiers - An object containing the modifiers passed to the directive.\n * @param {RippleOptions} [options] - {\n */\nfunction rippleHandler(el: DirectiveEl, modifiers: DirectiveModifiers, options?: RippleOptions) {\n  // Default values.\n  const props: DirectiveProps = {\n    event: 'mousedown',\n    transition: 600\n  };\n\n  setProps(objectKeys(modifiers), props);\n\n  el.addEventListener(props.event, (event) => {\n    rippleEl(event, el);\n  });\n\n  const bg = options?.color || 'rgba(0, 0, 0, 0.35)';\n  const zIndex = options?.zIndex || '9999';\n\n  const rippleEl = function (event, el: DirectiveEl) {\n    const target = el;\n    const targetBorder = parseInt((getComputedStyle(target).borderWidth).replace('px', ''));\n    const clientX = event.clientX || event.touches[0].clientX;\n    const clientY = event.clientY || event.touches[0].clientY;\n\n    // Get necessary variables\n    const rect = target.getBoundingClientRect();\n    const left = rect.left;\n    const top = rect.top;\n    const width = target.offsetWidth;\n    const height = target.offsetHeight;\n    const dx = clientX - left;\n    const dy = clientY - top;\n    const maxX = Math.max(dx, width - dx);\n    const maxY = Math.max(dy, height - dy);\n    const style = window.getComputedStyle(target);\n    const radius = Math.sqrt((maxX * maxX) + (maxY * maxY));\n    const border = (targetBorder > 0) ? targetBorder : 0;\n\n    // Create the ripple and its container\n    const ripple = document.createElement('div');\n    const rippleContainer = document.createElement('div');\n    rippleContainer.className = 'ripple-container';\n    ripple.className = 'ripple';\n\n    // Styles for ripple\n    ripple.style.marginTop = '0px';\n    ripple.style.marginLeft = '0px';\n    ripple.style.width = '1px';\n    ripple.style.height = '1px';\n    ripple.style.transition = `all ${props.transition}ms cubic-bezier(0.4, 0, 0.2, 1)`;\n    ripple.style.borderRadius = '50%';\n    ripple.style.pointerEvents = 'none';\n    ripple.style.position = 'relative';\n    ripple.style.zIndex = zIndex;\n    ripple.style.backgroundColor = bg;\n\n    // Styles for rippleContainer\n    rippleContainer.style.position = 'absolute';\n    rippleContainer.style.left = `${0 - border}px`;\n    rippleContainer.style.top = `${0 - border}px`;\n    rippleContainer.style.height = '0';\n    rippleContainer.style.width = '0';\n    rippleContainer.style.pointerEvents = 'none';\n    rippleContainer.style.overflow = 'hidden';\n\n    // Store target position to change it after\n    const storedTargetPosition = ((target.style.position).length > 0) ? target.style.position : getComputedStyle(target).position;\n    // Change target position to relative to guarantee ripples correct positioning\n    if (storedTargetPosition !== 'relative') {\n      target.style.position = 'relative';\n    }\n\n    rippleContainer.appendChild(ripple);\n    target.appendChild(rippleContainer);\n\n    ripple.style.marginLeft = `${dx}px`;\n    ripple.style.marginTop = `${dy}px`;\n\n    rippleContainer.style.width = `${width}px`;\n    rippleContainer.style.height = `${height}px`;\n    rippleContainer.style.borderTopLeftRadius = style.borderTopLeftRadius;\n    rippleContainer.style.borderTopRightRadius = style.borderTopRightRadius;\n    rippleContainer.style.borderBottomLeftRadius = style.borderBottomLeftRadius;\n    rippleContainer.style.borderBottomRightRadius = style.borderBottomRightRadius;\n\n    rippleContainer.style.direction = 'ltr';\n\n    setTimeout(() => {\n      ripple.style.width = `${radius * 2}px`;\n      ripple.style.height = `${radius * 2}px`;\n      ripple.style.marginLeft = `${dx - radius}px`;\n      ripple.style.marginTop = `${dy - radius}px`;\n    }, 0);\n\n    function clearRipple() {\n      setTimeout(() => {\n        ripple.style.backgroundColor = 'rgba(0, 0, 0, 0)';\n      }, 250);\n\n      // Timeout set to get a smooth removal of the ripple\n      setTimeout(() => {\n        rippleContainer.parentNode?.removeChild(rippleContainer);\n      }, 850);\n\n      el.removeEventListener('mouseup', clearRipple, false);\n      el.removeEventListener('mouseleave', clearRipple, false);\n      el.removeEventListener('dragstart', clearRipple, false);\n\n      // After removing event set position to target to its original one\n      // Timeout it's needed to avoid jerky effect of ripple jumping out parent target\n      setTimeout(() => {\n        let clearPosition = true;\n\n        for (const child of target.childNodes) {\n          // @ts-ignore\n          if (child.className === 'ripple-container') {\n            clearPosition = false;\n          }\n        }\n\n        if (clearPosition) {\n          if (storedTargetPosition !== 'static') {\n            target.style.position = storedTargetPosition;\n          } else {\n            target.style.position = '';\n          }\n        }\n      }, props.transition + 250);\n    }\n\n    if (event.type === 'mousedown') {\n      el.addEventListener('mouseup', clearRipple, false);\n      el.addEventListener('mouseleave', clearRipple, false);\n      el.addEventListener('dragstart', clearRipple, false);\n    } else {\n      clearRipple();\n    }\n  };\n}\n\nfunction makeRippleDir<T extends DirectiveEl>(options: RippleOptions = {}): Directive<T, string> {\n  return <ObjectDirective<T, string>>{\n    [`${isVue3 ? 'beforeMount' : 'bind'}`]: (el: T, binding: DirectiveBinding<string>) => rippleHandler(\n      el,\n      binding.modifiers,\n      { ...options, color: binding.value }\n    )\n  };\n}\n\n/* Creating a directive that can be used in a Vue component. */\nexport const vRipple = makeRippleDir<DirectiveEl>();\n\n/**\n * It takes an element, an optional event name, and an optional options object, and then calls the rippleHandler function\n * with the element, an object with the event name as a key and a boolean value, and the options object\n * @param {DirectiveEl | Ref<DirectiveEl>} el - The element to apply the ripple effect to.\n * @param event - The event that triggers the ripple effect.\n * @param {RippleOptions} [options] - RippleOptions\n */\nexport function useRipple<K extends DirectiveProps['event']>(el: DirectiveEl | Ref<DirectiveEl>, event?: K, options?: RippleOptions) {\n  const element = el instanceof HTMLElement ? el : el.value;\n  rippleHandler(element, (event ? { [event]: true } : { mousedown: true }), options);\n}\n\n/* Creating a plugin that can be used in a Vue component. */\nexport const Ripple: Plugin = {\n  install(app, options?: RippleOptions) {\n    app.directive('ripple', makeRippleDir<DirectiveEl>(options));\n  }\n};\n"],"names":["el"],"mappings":"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"}